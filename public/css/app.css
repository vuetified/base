@import url(https://fonts.googleapis.com/css?family=Raleway:300,400,600);@import url(https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Material+Icons);@import url(https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css);[v-cloak] .v-cloak--block {
  display: block;
}

[v-cloak] .v-cloak--inline {
  display: inline;
}

[v-cloak] .v-cloak--inlineBlock {
  display: inline-block;
}

[v-cloak] .v-cloak--hidden {
  display: none;
}

[v-cloak] .v-cloak--invisible {
  visibility: hidden;
}

.v-cloak--block,
.v-cloak--inline,
.v-cloak--inlineBlock {
  display: none;
}

.full-width {
  width: 100vw;
  height: calc(100vw * (9/16));
}

.spinner {
  width: 350px;
  height: 220px;
  text-align: center;
  font-size: 16px;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  margin: auto;
}

.spinner > div {
  height: 60%;
  width: 10px;
  background-color: #3cba54;
  display: inline-block;
  -webkit-animation: sk-stretchdelay 1.2s infinite ease-in-out;
  animation: sk-stretchdelay 1.2s infinite ease-in-out;
}

.spinner .rect2 {
  background-color: #f4c20d;
  -webkit-animation-delay: -1.1s;
  animation-delay: -1.1s;
}

.spinner .rect3 {
  background-color: #db3236;
  -webkit-animation-delay: -1.0s;
  animation-delay: -1.0s;
}

.spinner .rect4 {
  background-color: #4885ed;
  -webkit-animation-delay: -0.9s;
  animation-delay: -0.9s;
}

.spinner .rect5 {
  background-color: #607d8b;
  -webkit-animation-delay: -0.8s;
  animation-delay: -0.8s;
}

@-webkit-keyframes sk-stretchdelay {
  0%, 40%, 100% {
    -webkit-transform: scaleY(0.4);
  }

  20% {
    -webkit-transform: scaleY(1);
  }
}

@keyframes sk-stretchdelay {
  0%, 40%, 100% {
    transform: scaleY(0.4);
    -webkit-transform: scaleY(0.4);
  }

  20% {
    transform: scaleY(1);
    -webkit-transform: scaleY(1);
  }
}

.wf-loading .material-icons,
.wf-materialicons-n4-inactive .material-icons {
  display: none;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/